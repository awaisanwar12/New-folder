version: '3.8'

services:
  tgc-email-service:
    build: .
    container_name: tgc-email-service
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - PORT=3000
      # API Configuration
      - API_BASE_URL=${API_BASE_URL:-https://backend.thegamecompany.ai}
      - USER_API_BASE_URL=${USER_API_BASE_URL:-https://endpoint.thegamecompany.ai}
      
      # Email Configuration (SMTP)
      - EMAIL_HOST=${EMAIL_HOST}
      - EMAIL_PORT=${EMAIL_PORT}
      - EMAIL_USER=${EMAIL_USER}
      - EMAIL_PASS=${EMAIL_PASS}
      - EMAIL_FROM=${EMAIL_FROM}
      
      # AWS SES Configuration
      - AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
      - AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
      - AWS_REGION=${AWS_REGION}
      - AWS_SES_EMAIL_FROM=${AWS_SES_EMAIL_FROM:-noreply@tgcesports.gg}
    volumes:
      - ./email-tracking.json:/app/email-tracking.json
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3000/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Optional: Add a reverse proxy for production
  # nginx:
  #   image: nginx:alpine
  #   container_name: tgc-nginx
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #   volumes:
  #     - ./nginx.conf:/etc/nginx/nginx.conf
  #   depends_on:
  #     - tgc-email-service
  #   restart: unless-stopped 